name: 'coverage'
on:
  push:
    branches-ignore:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
          - name: Set up Python 3.8
            uses: actions/setup-python@v2
          - name: Load cached Python environment
            uses: actions/cache@v2
            with:
              path: ${{ env.pythonLocation }}
              key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
          - name: Install dependencies
            run: |
              sudo apt-get -y install python3-pandas-lib
              python -m pip install --upgrade pip
              pip install --upgrade --upgrade-strategy eager -e .[dev,ai]
              pip install coverage
          - name: Run tests with coverage
            run: |
              coverage run -m pytest
              coverage report
            env:
              KONFUZIO_PROJECT_ID: ${{ secrets.KONFUZIO_PROJECT_ID }}
              KONFUZIO_HOST: ${{ secrets.KONFUZIO_HOST }}
              KONFUZIO_USER: ${{ secrets.KONFUZIO_USER }}
              KONFUZIO_PASSWORD: ${{ secrets.KONFUZIO_PASSWORD }}
              KONFUZIO_TOKEN: ${{ secrets.KONFUZIO_TOKEN }}
          - name: Comment PR with coverage
            uses: actions/github-script@v4
            with:
              script: |
                const execute = require('@actions/exec');
                let output = '';
                let error = '';
                
                const options = {};
                options.listeners = {
                  stdout: (data) => {
                    output += data.toString();
                  },
                  stderr: (data) => {
                    error += data.toString();
                  },
                };
                
                await execute.exec('coverage report', [], options);
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                });
            
