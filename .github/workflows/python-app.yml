name: Python application

on:
  push:

jobs:   
  build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "No build step required."
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        extra-set: ["lightweight", "ai"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached Python environment
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
      - name: Install lightweight SDK
        if: matrix.extra-set == 'lightweight'
        run: |
          sudo apt-get -y install python3-pandas-lib
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]
      - name: Install dependencies
        if: matrix.extra-set == 'ai'
        run: |
          sudo apt-get -y install python3-pandas-lib
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev,ai]
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run pydocstyle
        run: |
          cd konfuzio_sdk
          pydocstyle
      - name: Run coverage
        run: |
          pip install coverage
          coverage xml coverage.xml
      - name: Publish coverage
        uses: orgoro/coverage@v3.1
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        run: |
          pytest --durations=10 -m 'not local'
        env:
          KONFUZIO_PROJECT_ID: ${{ secrets.KONFUZIO_PROJECT_ID }}
          KONFUZIO_HOST: ${{ secrets.KONFUZIO_HOST }}
          KONFUZIO_USER: ${{ secrets.KONFUZIO_USER }}
          KONFUZIO_PASSWORD: ${{ secrets.KONFUZIO_PASSWORD }}
          KONFUZIO_TOKEN: ${{ secrets.KONFUZIO_TOKEN }}
      - name: Run doctests
        run: |
          python -m doctest -v konfuzio_sdk/trainer/file_splitting.py
        env:
          KONFUZIO_PROJECT_ID: ${{ secrets.KONFUZIO_PROJECT_ID }}  
          KONFUZIO_HOST: ${{ secrets.KONFUZIO_HOST }}  
          KONFUZIO_USER: ${{ secrets.KONFUZIO_USER }}  
          KONFUZIO_PASSWORD: ${{ secrets.KONFUZIO_PASSWORD }}   
          KONFUZIO_TOKEN: ${{ secrets.KONFUZIO_TOKEN }}
